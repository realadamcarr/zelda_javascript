import { VectorOps } from "../math";
/**
 * The intersection between a ray and a collider.
 */
var ShapeColliderTOI = /** @class */ (function () {
    function ShapeColliderTOI(colliderHandle, toi, witness1, witness2, normal1, normal2) {
        this.colliderHandle = colliderHandle;
        this.toi = toi;
        this.witness1 = witness1;
        this.witness2 = witness2;
        this.normal1 = normal1;
        this.normal2 = normal2;
    }
    ShapeColliderTOI.fromRaw = function (raw) {
        if (!raw)
            return null;
        var result = new ShapeColliderTOI(raw.colliderHandle(), raw.toi(), VectorOps.fromRaw(raw.witness1()), VectorOps.fromRaw(raw.witness2()), VectorOps.fromRaw(raw.normal1()), VectorOps.fromRaw(raw.normal2()));
        raw.free();
        return result;
    };
    return ShapeColliderTOI;
}());
export { ShapeColliderTOI };
//# sourceMappingURL=toi.js.map