import { RawSerializationPipeline, } from "../raw";
import { VectorOps } from "../math";
import { World } from "./world";
/**
 * A pipeline for serializing the physics scene.
 *
 * To avoid leaking WASM resources, this MUST be freed manually with `queryPipeline.free()`
 * once you are done using it (and all the rigid-bodies it created).
 */
var SerializationPipeline = /** @class */ (function () {
    function SerializationPipeline(raw) {
        this.raw = raw || new RawSerializationPipeline();
    }
    /**
     * Release the WASM memory occupied by this serialization pipeline.
     */
    SerializationPipeline.prototype.free = function () {
        this.raw.free();
        this.raw = undefined;
    };
    /**
     * Serialize a complete physics state into a single byte array.
     * @param gravity - The current gravity affecting the simulation.
     * @param integrationParameters - The integration parameters of the simulation.
     * @param broadPhase - The broad-phase of the simulation.
     * @param narrowPhase - The narrow-phase of the simulation.
     * @param bodies - The rigid-bodies taking part into the simulation.
     * @param colliders - The colliders taking part into the simulation.
     * @param joints - The joints taking part into the simulation.
     */
    SerializationPipeline.prototype.serializeAll = function (gravity, integrationParameters, islands, broadPhase, narrowPhase, bodies, colliders, joints) {
        var rawGra = VectorOps.intoRaw(gravity);
        var res = this.raw.serializeAll(rawGra, integrationParameters.raw, islands.raw, broadPhase.raw, narrowPhase.raw, bodies.raw, colliders.raw, joints.raw);
        rawGra.free();
        return res;
    };
    /**
     * Deserialize the complete physics state from a single byte array.
     *
     * @param data - The byte array to deserialize.
     */
    SerializationPipeline.prototype.deserializeAll = function (data) {
        return World.fromRaw(this.raw.deserializeAll(data));
    };
    return SerializationPipeline;
}());
export { SerializationPipeline };
//# sourceMappingURL=serialization_pipeline.js.map